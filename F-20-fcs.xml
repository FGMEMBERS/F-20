<flight_control name="FCS: F-20">

<!-- ****************************************************************-->     
 <channel name="Throttle Control">

    <fcs_function name="fcs/throttle-pos-norm">
       <function>
           <table>
               <independentVar>fcs/throttle-cmd-norm[0]</independentVar>
                    <tableData>                        
            0.00    0.0
            0.09    0.0
            0.75    0.99999
            0.85    0.99999
            1.00    2.0                                
                    </tableData>
                </table>
       </function>
       <output>fcs/throttle-pos-norm</output>
   </fcs_function>
    
</channel>


<!-- ****************************************************************-->
  <channel name="Pitch">
      
   <!-- pitch CAS +++++++++++++++++++++++++++++++++++++++++++++++++++-->   
   
   <!-- Stick shaping -->   
   <lead_lag_filter name="filtered stick">
        <input>fcs/elevator-cmd-norm</input>
        <c1>0.0</c1>
        <c2>1.0</c2>
        <c3>0.1</c3>
        <c4>1.0</c4>
    <clipto>
        <min>-1.0</min>
        <max>1.0</max>
    </clipto>
    </lead_lag_filter>
    
  <pure_gain name = "stick-pitch-trim">
    <input>fcs/pitch-trim-cmd-norm</input>
    <gain>10.0</gain>
    <clipto>
           <min>-1.0</min>
           <max>1.0</max>
    </clipto>
  </pure_gain> 
    
    <fcs_function name="negative-stick-position">
       <function>
           <sum>           
               <product>
                    <property>fcs/filtered-stick</property>
                    <sum>
                        <value>1.0</value>
                        <property>fcs/stick-pitch-trim</property>
                    </sum>
               </product>
               <property>fcs/stick-pitch-trim</property>
           </sum>
       </function>
   </fcs_function>
      
   <fcs_function name="positive-stick-position">
       <function>
           <sum>           
               <product>
                    <property>fcs/filtered-stick</property>
                    <difference>
                        <value>1.0</value>
                        <property>fcs/stick-pitch-trim</property>
                    </difference>
               </product>
               <property>fcs/stick-pitch-trim</property>
           </sum>
       </function>
   </fcs_function>
   
   <switch name="stick-position">
       <default value="fcs/positive-stick-position"/>
       <test value="fcs/negative-stick-position">
           fcs/filtered-stick LE 0
       </test>
   </switch>
    
 
    <fcs_function name="reverse stick">
       <function>
           <table>
               <independentVar>fcs/stick-position</independentVar>
                    <tableData>                        
                        -1.000 1.0    
                        -0.01   0
                        0.01    0
                        1.0     -1.0                                    
                    </tableData>
                </table>
       </function>
   </fcs_function>
   
   
   <!-- gear up laws  ###############################################-->   
   
   <!-- Switch between g-demand law and alpha law ...................-->

   <fcs_function name="positive-g-limit">
       <function>
           <table>
               <independentVar>velocities/vc-kts</independentVar>
                    <tableData>
                        100 1.0                       
                        150 2.5    
                        200 4.5
                        250 5.5
                        300 7.5
                        350 8.0                                    
                    </tableData>
                </table>
       </function>
   </fcs_function>
   
     <!-- give a shaped law to get commands from stick deflection-->
   <fcs_function name="positive-stick-shape">
       <function>
           <sum>    
            <product>
                 <property>fcs/positive-g-limit</property>
                  <pow>
                    <property>fcs/reverse-stick</property>
                    <value>2.0</value>
                  </pow>
            </product>
               <cos>
                   <property>attitude/theta-rad</property>
               </cos>

               <!--<value>1.0</value>-->
           </sum>
       </function>
   </fcs_function>
   
      <fcs_function name="negative-g-limit">
       <function>
           <table>
               <independentVar>velocities/vc-kts</independentVar>
                    <tableData>
                        100 -3.0                       
                        150 -4.5                                       
                    </tableData>
                </table>
       </function>
   </fcs_function>
   
      <fcs_function name="negative-stick-shape">
       <function>
           <sum>           
               <product>
                  <property>fcs/negative-g-limit</property>
                  <pow>
                    <property>fcs/reverse-stick</property>
                    <value>2.0</value>
                  </pow>
               </product>
                   <cos>
                       <property>attitude/theta-rad</property>
                   </cos>
           </sum>
       </function>
   </fcs_function>
   
   <switch name="g-command">
       <default value="fcs/negative-stick-shape"/>
       <test value="fcs/positive-stick-shape">
           fcs/reverse-stick GT 0          
       </test>
   </switch>   
   
   <fcs_function name="g-error">
      <function>
          <difference>
              <property>fcs/g-command</property>
              <property>accelerations/Nz</property>
          </difference>
       </function>
   </fcs_function>
   
   
   <!-- g-demand law  for alpha  .................................-->
   
  <!-- Integral term --> 
    
   <switch name="fcs/g-error-windup-trigger">
       <default value="0.0"/>
       <test logic="OR" value="1.0">
          fcs/positive-g-saturation == 1
          fcs/negative-g-saturation == 1
       </test>
   </switch>
   
  <fcs_function name="g-i-gain">
      <function>
          <table>
            <independentVar lookup="row">aero/qbar-psf</independentVar>
               <tableData>
                  0    7.0  
                  330  5.0  
                  400  2.5  
                  1650 0.5  
            </tableData>
           </table>
       </function>
   </fcs_function>  
   
   <integrator name="g-raw-integral-term">
       <input>fcs/g-error</input>
       <c1>fcs/g-i-gain</c1>
       <trigger>fcs/g-error-windup-trigger</trigger>   
   </integrator>  
   
   <summer name="g-integral-offset-from-saturation">
       <input>fcs/g-raw-integral-term</input>
       <input>-aero/alpha-deg</input>
       <input>-fcs/g-proportional-term</input>
   </summer>
   
      <switch name="g-integral-offset-source">
       <default value="fcs/g-integral-offset-from-saturation"/>
       <test logic="OR" value="fcs/g-gear-down-integral-offset">
           gear/gear-cmd-norm GT 0
       </test>       
     </switch> 
   
     <switch name="g-integral-offset">
       <default value="fcs/g-integral-offset"/>
       <test logic="OR" value="fcs/g-integral-offset-source">
           gear/gear-cmd-norm GT 0
           fcs/flyable-alpha-exceeded == 1
          fcs/positive-alpha-dot-saturation == 1
          fcs/negative-alpha-dot-saturation == 1
       </test>       
     </switch> 
   
   <summer name="g-integral-term">
       <input>fcs/g-raw-integral-term</input>
       <input>-fcs/g-integral-offset</input>
   </summer>
   
   <!--Proportional term -->
   <fcs_function name="g-p-gain">
      <function>
          <table>
            <independentVar>aero/qbar-psf</independentVar>
               <tableData>
                  330  1.0  
                  400  0.5                                
                  1650 0.05                      
            </tableData>
           </table>
       </function>
   </fcs_function> 
   
    <pure_gain name = "g-proportional-term">
        <input>fcs/g-error</input>
        <gain>fcs/g-p-gain</gain>
    </pure_gain> 
    
       <fcs_function name="max-alpha">
      <function>
          <table>
            <independentVar>fcs/reverse-stick</independentVar>
               <tableData>                  
                  0.5  45.0
                  1.0  45.0                                      
            </tableData>
           </table>
       </function>
   </fcs_function> 
   
   <fcs_function name="min-alpha">
      <function>
          <table>
            <independentVar>fcs/reverse-stick</independentVar>
               <tableData>                  
                  -1.0  -25.0                                      
                  -0.5  -25.0                  
            </tableData>
           </table>
       </function>
   </fcs_function>
    
   <switch name="positive-g-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/alpha-target-from-g ge fcs/max-alpha
           fcs/g-error gt 0
       </test>
   </switch>
   
   <switch name="negative-g-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/alpha-target-from-g le fcs/min-alpha
           fcs/g-error lt 0
       </test>
   </switch>
   
   <summer name="alpha-target-from-g">
       <input>fcs/g-integral-term</input>       
       <input>fcs/g-proportional-term</input> 
       <clipto>
           <min>fcs/min-alpha</min>
           <max>fcs/max-alpha</max>
       </clipto>
   </summer>
   
   <!-- alpha-dot law from alpha ..................................-->
   
    <fcs_function name="alpha-error">
      <function>
          <difference>
              <property>fcs/alpha-target-from-g</property>
              <property>aero/alpha-deg</property>
          </difference>
       </function>
   </fcs_function>
   
    <!--Integral term -->
    <fcs_function name="alpha-dot-i-gain-for-alpha">
      <function>
          <table>
            <independentVar>aero/qbar-psf</independentVar>
               <tableData>
                  330  0.001
                  400  0.001
                  1650 0.001
            </tableData>
           </table>
       </function>
   </fcs_function> 

   <switch name="fcs/alpha-error-windup-trigger">
       <default value="0.0"/>
       <test logic="OR" value="1">
          gear/gear-cmd-norm GT 0
          fcs/positive-alpha-saturation == 1
          fcs/negative-alpha-saturation == 1
       </test>
   </switch>
   
   <integrator name="alpha-raw-integral-term">
       <input>fcs/alpha-error</input>
       <c1>fcs/alpha-dot-i-gain-for-alpha</c1>
       <trigger>fcs/alpha-error-windup-trigger</trigger>   
   </integrator>  
   
   <switch name="alpha-integral-offset">
       <default value="fcs/alpha-integral-offset"/>
       <test logic="OR" value="fcs/alpha-raw-integral-term">
           gear/gear-cmd-norm GT 0
           fcs/flyable-alpha-exceeded == 1
       </test>
   </switch>
   
   <summer name="alpha-integral-term">
       <input>fcs/alpha-raw-integral-term</input>
       <input>-fcs/alpha-integral-offset</input>
   </summer>
   
   <!-- Proportional term -->
   <fcs_function name="alpha-dot-p-gain-for-alpha">
      <function>
          <table>
            <independentVar>aero/qbar-psf</independentVar>
               <tableData>
                  0    4.0
                  330  4.0 
                  400  4.0                  
                  1650 4.0                    
            </tableData>
           </table>
       </function>
   </fcs_function> 
   
    <pure_gain name = "alpha-proportional-term">
        <input>fcs/alpha-error</input>
        <gain>fcs/alpha-dot-p-gain-for-alpha</gain>
    </pure_gain> 
   
   <switch name="positive-alpha-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/alpha-dot-target ge 10.0
           fcs/alpha-error gt 0
       </test>
   </switch>
   
   <switch name="negative-alpha-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/alpha-dot-target le -10.0
           fcs/alpha-error lt 0
       </test>
   </switch>
   
   <switch name="flyable-alpha-exceeded">
       <default value="0"/>
       <test logic="AND" value="1">
           aero/alpha-deg gt 50.0
       </test>
   </switch>
   
   <summer name="alpha-dot-target">
       <input>fcs/alpha-integral-term</input>       
       <input>fcs/alpha-proportional-term</input>
       <clipto>
           <min>-10.0</min>
           <max>10.0</max>
       </clipto>
   </summer>
   
  <!-- Control law from alpha dot ...................................-->
   
   <summer name="alpha-dot-error">
      <input>fcs/alpha-dot-target</input>
      <input>-aero/alphadot-deg_sec</input>
   </summer>
   
   <!-- integral term -->

   <switch name="fcs/alpha-dot-windup-trigger">
       <default value="0.0"/>
       <test logic="OR" value="1.0">          
          fcs/positive-alpha-dot-saturation == 1
          fcs/negative-alpha-dot-saturation == 1
          gear/gear-cmd-norm GT 0
       </test>
   </switch>
   
   <fcs_function name="pitch-i-gain">
      <function>
          <table>
            <independentVar>aero/qbar-psf</independentVar>
               <tableData>
                  330  -1.0 
                  400  -0.5                    
                  1650 -0.125                      
            </tableData>
           </table>
       </function>
   </fcs_function>
   
   <integrator name="alpha-dot-raw-integral-term">
        <input>fcs/alpha-dot-error</input>
        <c1>fcs/pitch-i-gain</c1>
        <trigger>fcs/alpha-dot-windup-trigger</trigger>
   </integrator>
   
   <switch name="alpha-dot-integral-offset-source">
       <default value="fcs/alpha-dot-raw-integral-term"/>
       <test logic="OR" value="fcs/initial-integral-offset">
           gear/gear-cmd-norm GT 0
       </test>       
     </switch> 
   
     <switch name="alpha-dot-integral-offset">
       <default value="fcs/alpha-dot-integral-offset"/>
       <test logic="OR" value="fcs/alpha-dot-integral-offset-source">
           gear/gear-cmd-norm GT 0
           fcs/flyable-alpha-exceeded == 1
       </test>       
     </switch> 
     
    <summer name="alpha-dot-integral-term">
       <input>fcs/alpha-dot-raw-integral-term</input>
       <input>-fcs/alpha-dot-integral-offset</input>
   </summer>

  <!-- Proportional term -->
   <fcs_function name="pitch-p-gain">
      <function>
          <table>
            <independentVar>aero/qbar-psf</independentVar>
             <tableData> 
                  330  -0.1   
                  400  -0.05                  
                  1650 -0.0125                      
            </tableData>
           </table>
       </function>
   </fcs_function> 
   
  <pure_gain name = "alpha-dot-proportional-term">
    <input>fcs/alpha-dot-error</input>
    <gain>fcs/pitch-p-gain</gain>
  </pure_gain> 

   <switch name="positive-alpha-dot-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/cas-pitch-gear-up-input le -1
           fcs/alpha-dot-error gt 0
       </test>
   </switch>
   
   <switch name="negative-alpha-dot-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/cas-pitch-gear-up-input ge 1.0
           fcs/alpha-dot-error lt 0
       </test>
   </switch>

   <summer name="cas-pitch-gu-demand-law">
       <input>fcs/alpha-dot-proportional-term</input>
       <input>fcs/alpha-dot-integral-term</input>
   </summer>
      
   <!-- increase authority of the CAS vs mechanical input ##########-->
   <pure_gain name = "cas-pitch-gu-demand-law-augmented">
    <input>fcs/cas-pitch-gu-demand-law</input>
    <gain>1.8</gain>
   </pure_gain> 
   
  <pure_gain name = "cas-curb-stick">
    <input>fcs/stick-position</input>
    <gain>-1.0</gain>
  </pure_gain> 
  
  <!-- Help the self trimming function of the cas by requiring 
      a nose down bias when accelerating ############################--> 
       
   <!-- crude approximation of q-bar derivative -->    
   <fcs_function name="qbar-dot">
       <function>
           <product>           
                <property>accelerations/udot-ft_sec2</property>
                <value>0.5</value>
                <property>velocities/vc-fps</property>
           </product>
       </function>
   </fcs_function>
  
   <pure_gain name = "cas-acceleration-compensation">
    <input>fcs/qbar-dot</input>
    <gain>3e-6</gain>
      <clipto>
        <min> -0.4 </min>
        <max>  0.4 </max>
      </clipto>
   </pure_gain> 
   
   <summer name="cas-pitch-gear-up-input">
      <input>fcs/cas-curb-stick</input>
      <input>fcs/cas-pitch-gu-demand-law-augmented</input>
      <input>fcs/cas-acceleration-compensation</input>
      <clipto>
        <min> -1 </min>
        <max>  1 </max>
      </clipto>
   </summer> 

   <!--Store the last equilibrium position as the trim position -->
   <switch name="cas-pitch-trim">
       <default value="fcs/cas-pitch-gear-up-input"/>
       <test logic ="OR" value="fcs/cas-pitch-trim">
           fcs/elevator-cmd-norm GT 0.01
           fcs/elevator-cmd-norm LT -0.01
           gear/gear-cmd-norm GT 0 
       </test>
   </switch>
   
   <!-- gear down law ###############################################-->
    <switch name="time-wow">
       <default value="sim-time-sec"/>
       <test value="fcs/time-wow">
         gear/wow LT 1
       </test>       
   </switch>
   
   <switch name="time-gear-down">
       <default value="sim-time-sec"/>
       <test value="fcs/time-gear-down">
         gear/gear-cmd-norm GT 0
       </test>       
   </switch>
   
   <switch name="landing-mode-active">
       <default value="0"/>
       <test value="1">
         fcs/time-gear-down GE fcs/time-wow
       </test>       
   </switch>
   
   <!-- speed stability law -->      
   <pure_gain name = "cas-pitch-speed-stability-law">
    <input>accelerations/udot-ft_sec2</input>
    <gain>-0.025</gain>
      <clipto>
        <min> -0.2 </min>
        <max>  0.2 </max>
      </clipto>
   </pure_gain> 
   
   <!-- pitch damper law -->
   <pure_gain name = "q-target-deg_sec">
    <input>fcs/stick-position</input>
    <gain>10</gain>
   </pure_gain> 
   
   <pure_gain name = "q-target-rad_sec">
    <input>fcs/q-target-deg_sec</input>
    <gain>0.017453293</gain>
   </pure_gain> 

   <summer name="q-error">
      <input>velocities/q-rad_sec</input>
      <input>-fcs/q-target-rad_sec</input>
      <input>fcs/cas-acceleration-compensation</input>
   </summer>
   
   <pure_gain name = "cas-pitch-damper-law">
    <input>fcs/q-error</input>
    <gain>1.0</gain>
      <clipto>
        <min> -0.5 </min>
        <max>  0.5 </max>
      </clipto>
   </pure_gain> 
   
   <summer name="cas-pitch-approach">
      <input>fcs/cas-pitch-speed-stability-law</input>
      <input>fcs/cas-pitch-damper-law</input>
      <input>fcs/stick-position</input>
      <input>fcs/cas-pitch-trim</input>
      <clipto>
        <min> -1 </min>
        <max>  1 </max>
      </clipto>
   </summer> 
   
   <summer name="cas-pitch-take-off">
      <input>fcs/stick-position</input>
      <input>fcs/cas-pitch-damper-law</input>
      <clipto>
        <min> -1 </min>
        <max>  1 </max>
      </clipto>
   </summer> 
   
   <switch name="cas-pitch-gear-down-input">
       <default value="fcs/cas-pitch-take-off"/>
       <test value="fcs/cas-pitch-approach">
          fcs/landing-mode-active == 1
       </test>
   </switch>
   
    <summer name="initial-integral-offset">
      <input>-fcs/cas-pitch-gear-down-input</input>
      <input>fcs/alpha-dot-raw-integral-term</input>
   </summer> 
    
   <summer name="g-gear-down-integral-offset">
      <input>fcs/g-raw-integral-term</input>
      <input>-aero/alpha-deg</input>
   </summer> 
   
<!-- blended cas pitch ++++++++++++++++++++++++++++++++++++++++++++++-->   
      
   <!-- final cas pitch output -->   
      
   <switch name="cas-pitch">
       <default value="fcs/cas-pitch-gear-down-input"/>
       <test value="fcs/cas-pitch-gear-up-input">
           gear/gear-cmd-norm LT 1
       </test>
   </switch> 

<!-- mechanical mixer +++++++++++++++++++++++++++++++++++++++++++++++-->
<pure_gain name = "cas-pitch-input">
    <input>fcs/cas-pitch</input>
    <gain>0.4</gain>
</pure_gain> 

<pure_gain name = "mechanical-pitch-input">
    <input>fcs/stick-position</input>
    <gain>0.6</gain>
</pure_gain> 

   <summer name="Pitch Trim Sum">
      <input>fcs/mechanical-pitch-input</input>     
      <input>fcs/cas-pitch-input</input>
      <clipto>
        <min> -1 </min>
        <max>  1 </max>
      </clipto>
   </summer>
    
   <!--Unpowered position --> 
   <pure_gain name = "pitch-weathervane">      
      <input>aero/alpha-deg</input>
      <gain>-0.0174533</gain>
   </pure_gain>

   <switch name="frozen-elevator">
	   <default value="fcs/pitch-trim-sum"/>
	   <test value="fcs/frozen-elevator">
		   fcs/pitch-no-pressure eq 1
	   </test>
   </switch>
   
   <switch name="pitch-unpowered">
	   <default value="fcs/frozen-elevator"/>
	   <test logic="AND" value="fcs/pitch-weathervane">
		   fcs/pitch-no-pressure eq 1 
		   aero/qbar-psf GT 5
	   </test>
   </switch>
      
   <switch name="Elevator command">
	   <default value="fcs/pitch-trim-sum"/>
	   <test value="fcs/pitch-unpowered">
		   fcs/pitch-no-pressure eq 1
	   </test>
   </switch>

   <!--actuator -->
   <actuator name="Pitch actuator">
	   <input>fcs/elevator-command</input>
	   <rate_limit>fcs/pitch-actuator-rate</rate_limit>
   </actuator>   
   
   <aerosurface_scale name="Elevator position">
      <input>fcs/pitch-actuator</input>
      <range>
        <min> -0.34906585</min>
        <max>  0.087266463 </max>
      </range>
      <output>fcs/elevator-pos-rad</output>
   </aerosurface_scale>

   <aerosurface_scale name="elevator normalization">
      <input>fcs/elevator-pos-rad</input>
      <domain>
        <min> -0.35 </min>
        <max>  0.35 </max>
      </domain>
      <range>
        <min> -1 </min>
        <max>  1 </max>
      </range>
      <output>fcs/elevator-pos-norm</output>
   </aerosurface_scale>

  </channel>


<!-- ****************************************************************-->
  <channel name="Roll">
      
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <fcs_function name="roll-stick-shaper">
      <function>
        <sum>
        <product>
         <value>0.8</value>
         <pow>
             <property>fcs/aileron-cmd-norm</property>
             <value>5.0</value>             
         </pow>
         </product>
         <product>
             <value>0.2</value>
             <property>fcs/aileron-cmd-norm</property>
         </product>
         </sum>         
       </function>
   </fcs_function>      
    
    <fcs_function name="p-target">
       <function>
           <table>
               <independentVar>fcs/roll-stick-shaper</independentVar>
                    <tableData>                        
                        -1.000  -6.2832    
                        -0.01   0
                        0.01    0
                        1.0     6.2832                                    
                    </tableData>
                </table>
       </function>
   </fcs_function>      
      
   <fcs_function name="p-error">
      <function>          
          <difference>
              <property>fcs/p-target</property>
              <property>velocities/p-rad_sec</property>
          </difference>
       </function>
   </fcs_function>
   
  <deadband name="fcs/p-windup-dead-band">
    <input>fcs/p-error</input>
    <width>1.0</width>
   </deadband>
   
   <switch name="fcs/p-windup-trigger">
       <default value="0.0"/>
       <test logic="OR" value="fcs/p-windup-dead-band">
          gear/gear-cmd-norm GT 0
          fcs/p-windup-dead-band == 0.0
          fcs/negative-roll-saturation == 1
          fcs/positive-roll-saturation == 1
       </test>
   </switch>
   
   <pid name="roll-cas-norm">
       <input>fcs/p-error</input>
       <kp>2.0</kp>
       <ki>5.0</ki>
       <trigger>fcs/p-windup-trigger</trigger>
       <kd>0.0</kd>
       <clipto>
           <min>-1.0</min>
           <max>1.0</max>
       </clipto>
   </pid>     
   
   <switch name="positive-roll-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/roll-cas-norm ge 1
           fcs/p-error gt 0
       </test>
   </switch>
   
   <switch name="negative-roll-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/roll-cas-norm le -1.0
           fcs/p-error lt 0
       </test>
   </switch>
   
<!--
  <pure_gain name = "cas-curb-roll">
    <input>fcs/aileron-cmd-norm</input>
    <gain>-0.8</gain>
  </pure_gain>  

  
    <summer name="cas-roll">
      <input>fcs/roll-cas-norm</input>
      <input>fcs/cas-curb-roll</input>
      <clipto>
        <min> -1 </min>
        <max>  1 </max>
      </clipto>
   </summer>-->
   

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<pure_gain name = "cas-roll-input">
    <input>fcs/roll-cas-norm</input>
    <gain>0.5</gain>
</pure_gain> 

<pure_gain name = "mechanical-roll-input">
    <input>fcs/aileron-cmd-norm</input>
    <gain>0.5</gain>
</pure_gain> 

   <summer name="Roll Trim Sum">
      <input>fcs/mechanical-roll-input</input>
      <input>fcs/cas-roll-input</input>
      <clipto>
        <min> -1 </min>
        <max>  1 </max>
      </clipto>
   </summer>
   
   <!--Unpowered position -->
   <pure_gain name = "roll-weathervane">      
      <input>velocities/p-rad_sec</input>
      <gain>0.2</gain>
   </pure_gain>

   <switch name="frozen-aileron">
	   <default value="fcs/roll-trim-sum"/>
	   <test value="fcs/frozen-aileron">
		   fcs/roll-no-pressure eq 1
	   </test>
   </switch>
   
   <switch name="roll-unpowered">
	   <default value="fcs/frozen-aileron"/>
	   <test logic="AND" value="fcs/roll-weathervane">
		   fcs/roll-no-pressure eq 1 
		   aero/qbar-psf GT 5
	   </test>
   </switch>
      
   <switch name="Aileron command">
	   <default value="fcs/roll-trim-sum"/>
	   <test value="fcs/roll-unpowered">
		   fcs/roll-no-pressure eq 1
	   </test>
   </switch>   
   
   <!--actuator-->
   <actuator name="Roll actuator">
	   <input>fcs/aileron-command</input>
	   <rate_limit>fcs/roll-actuator-rate</rate_limit>
   </actuator>

   <aerosurface_scale name="Left Aileron Control">
      <input>fcs/roll-actuator</input>
      <range>
        <min> -0.35 </min>
        <max>  0.35 </max>
      </range>
      <output>fcs/left-aileron-pos-rad</output>
   </aerosurface_scale>

   <aerosurface_scale name="Right Aileron Control">
      <input>fcs/roll-actuator</input>
      <range>
        <min> -0.35 </min>
        <max>  0.35 </max>
      </range>
      <output>fcs/right-aileron-pos-rad</output>
   </aerosurface_scale>

   <aerosurface_scale name="left aileron normalization">
      <input>fcs/left-aileron-pos-rad</input>
      <domain>
        <min> -0.35 </min>
        <max>  0.35 </max>
      </domain>
      <range>
        <min> -1 </min>
        <max>  1 </max>
      </range>
      <output>fcs/left-aileron-pos-norm</output>
   </aerosurface_scale>

   <aerosurface_scale name="right aileron normalization">
      <input>fcs/right-aileron-pos-rad</input>
      <domain>
        <min> -0.35 </min>
        <max>  0.35 </max>
      </domain>
      <range>
        <min> -1 </min>
        <max>  1 </max>
      </range>
      <output>fcs/right-aileron-pos-norm</output>
   </aerosurface_scale>

  </channel>


<!-- ****************************************************************-->
  <channel name="Yaw">

<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->      
   <!-- Yaw damper -->
   
   <fcs_function name="ny-target">
       <function>
           <table>
               <independentVar>fcs/rudder-cmd-norm</independentVar>
                    <tableData>                        
                        -1.000  1.2    
                        -0.01   0
                        0.01    0
                        1.0     -1.2                                    
                    </tableData>
                </table>
       </function>
   </fcs_function>
   
   <fcs_function name="ny-error">
      <function>          
          <difference>
              <property>fcs/ny-target</property>
              <property>accelerations/Ny</property>
          </difference>
       </function>
   </fcs_function>
   
   <switch name="fcs/ny-windup-trigger">
      <default value="0.0"/>
       <test logic="OR" value="1.0">
          gear/gear-cmd-norm GT 0
          fcs/negative-yaw-saturation == 1
          fcs/positive-yaw-saturation == 1
       </test>
   </switch>
   
   <fcs_function name="yaw-p-gain">
      <function>
          <table>
            <independentVar>aero/qbar-psf</independentVar>
             <tableData> 
                  0    -0.1
                  330  -0.01   
                  400  -0.005
                  1000 -0.00125
                  1650 -0.00015                      
            </tableData>
           </table>
       </function>
   </fcs_function> 
   
   <fcs_function name="yaw-i-gain">
      <function>
          <table>
            <independentVar>aero/qbar-psf</independentVar>
             <tableData> 
                  330  -4.0
                  400  -2.0                                                     
                  1000 -0.25                      
                  1650 -0.01
            </tableData>
           </table>
       </function>
   </fcs_function> 
   
   <fcs_function name="yaw-d-gain">
      <function>
          <table>
            <independentVar>aero/qbar-psf</independentVar>
             <tableData> 
                  330  -2   
                  400  -1                  
                  1000 -0.25                     
                  1650 -0.01
            </tableData>
           </table>
       </function>
   </fcs_function> 
   
   <pid name="yaw-damp-norm">
       <input>fcs/ny-error</input>       
<!--
       <kp>fcs/yaw-p-gain</kp>
       <ki>fcs/yaw-i-gain</ki> 
-->
       <kp>0.0</kp>
       <ki>0.0</ki> 
       <trigger>fcs/ny-windup-trigger</trigger>      
       <kd>fcs/yaw-d-gain</kd>
       <clipto>
           <min>-1.0</min>
           <max>1.0</max>
       </clipto>
   </pid>
   
   <summer name="yaw-cas-norm">
       <input>fcs/yaw-damp-norm</input>
       <input>fcs/rudder-cmd-norm</input>
       <clipto>
           <min>-1.0</min>
           <max>1.0</max>
       </clipto>
   </summer>
   
   <switch name="positive-yaw-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/yaw-cas-norm ge 1
           fcs/ny-error lt 0
       </test>
   </switch>
   
   <switch name="negative-yaw-saturation">
       <default value="0"/>
       <test logic="AND" value="1">
           fcs/yaw-cas-norm le -1.0
           fcs/ny-error gt 0
       </test>
   </switch>
   
   <switch name="fcs/yaw-cas">
       <default value="0.0"/> 
       <test value="fcs/yaw-cas-norm">
          gear/wow LT 1
       </test>
   </switch>   
   
<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<pure_gain name = "cas-yaw-input">
    <input>fcs/yaw-cas</input>
    <gain>0.5</gain>
</pure_gain> 

<pure_gain name = "mechanical-yaw-input">
    <input>fcs/rudder-cmd-norm</input>
    <gain>0.5</gain>
</pure_gain> 

   <summer name="Rudder Command Sum">
      <input>fcs/cas-yaw-input</input>
      <input>fcs/mechanical-yaw-input</input>
      <clipto>
        <min> -1 </min>
        <max>  1 </max>
      </clipto>
   </summer>
   
   <!--Unpowered position --> 
   <pure_gain name = "yaw-weathervane">      
      <input>aero/beta-deg</input>
      <gain>-0.0174533</gain>
   </pure_gain>

   <switch name="frozen-rudder">
	   <default value="fcs/rudder-command-sum"/>
	   <test value="fcs/frozen-rudder">
		   fcs/yaw-no-pressure eq 1
	   </test>
   </switch>
   
   <switch name="yaw-unpowered">
	   <default value="fcs/frozen-rudder"/>
	   <test logic="AND" value="fcs/yaw-weathervane">
		   fcs/yaw-no-pressure eq 1 
		   aero/qbar-psf GT 5
	   </test>
   </switch>
      
   <switch name="Rudder command">
	   <default value="fcs/rudder-command-sum"/>
	   <test value="fcs/yaw-unpowered">
		   fcs/yaw-no-pressure eq 1
	   </test>
   </switch>
   
   <!-- actuator -->
   <actuator name="Rudder actuator">
	   <input>fcs/rudder-command</input>
	   <rate_limit>fcs/yaw-actuator-rate</rate_limit>
   </actuator>

   <aerosurface_scale name="Rudder Control">
     <input>fcs/rudder-actuator</input>
      <range>
        <min> -0.35 </min>
        <max>  0.35 </max>
      </range>
      <output>fcs/rudder-pos-rad</output>
   </aerosurface_scale>

   <aerosurface_scale name="rudder normalization">
      <input>fcs/rudder-pos-rad</input>
      <domain>
        <min> -0.35 </min>
        <max>  0.35 </max>
      </domain>
      <range>
        <min> -1 </min>
        <max>  1 </max>
      </range>
      <output>fcs/rudder-pos-norm</output>
   </aerosurface_scale>

  </channel>  
    
<!-- ****************************************************************-->    
  <channel name="Landing Gear">
   <scheduled_gain name="Scheduled Steer Pos Deg">
        <input>fcs/steer-cmd-norm</input>
        <table>
            <independentVar>velocities/vg-fps</independentVar>
            <tableData>
                10.0        70.0
                20.0        7.5
                150.0       2.0
            </tableData>
        </table>
        <output>fcs/steer-pos-deg</output>
    </scheduled_gain> 
    
    
   <kinematic name="Gear Control">
     <input>gear/gear-cmd-norm</input>
     <traverse>
       <setting>
          <position> 0 </position>
          <time>     0 </time>
       </setting>
       <setting>
          <position> 1 </position>
          <time>     3 </time>
       </setting>
     </traverse>
     <output>gear/gear-pos-norm</output>
   </kinematic>
  </channel>

<!-- ****************************************************************-->
  <channel name="Speedbrake">
	  
   <actuator name="Speedbrake Control">
	   <input>fcs/speedbrake-cmd-norm</input>
	   <rate_limit>fcs/speed-brake-rate</rate_limit>
	   <output>fcs/speedbrake-pos-norm</output>
   </actuator>

  </channel>

 </flight_control>
