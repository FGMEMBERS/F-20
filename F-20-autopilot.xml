<?xml version="1.0"?>
 
<!-- Generic Autopilot Configuration -->

<!-- Each component is evaluated in the order specified.  You can make up -->
<!-- property names to pass the result of one component on to a subsequent -->
<!-- component. -->


<PropertyList>

  <!-- current gamma = /fdm/jsbsim/flight-path/gamma-rad -->
  <!-- =============================================================== -->
  <!-- Roll Axis Modes                                                 -->
  <!-- =============================================================== -->


<predict-simple>
  <name>predicted heading error 5 seconds ahead</name>
  <debug>false</debug>
  <input>/autopilot/internal/heading-bug-error-deg</input>
  <output>/autopilot/internal/bug-error-5-sec-ahead</output>
  <seconds>5.0</seconds>
  <filter-gain>0.1</filter-gain>
</predict-simple>


  <!-- Heading Bug Hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target roll based on diff between current heading -->
  <!-- and heading bug. -->
  <pid-controller>
    <name>Heading Bug Hold (DG based) Stage 1</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/heading</prop>
      <value>dg-heading-hold</value>
    </enable>
    <input>
      <prop>/autopilot/internal/bug-error-5-sec-ahead</prop>
    </input>
    <reference>
      <value>0.0</value>
    </reference>
    <output>
      <prop>/autopilot/internal/target-roll-deg</prop>
    </output>
    <config>
      <Kp>-2.0</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>     <!-- input value weighing factor -->
      <alpha>0.0001</alpha>   <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>   <!-- input value weighing factor for -->
                           <!-- unfiltered derivative error -->
      <Ti>1.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>     <!-- derivator time -->
      <u_min>-35.0</u_min> <!-- minimum output clamp -->
      <u_max>35.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  
  <!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->
  <pid-controller>
    <name>Heading Bug Hold (DG based) Stage 2</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/heading</prop>
      <value>dg-heading-hold</value>
    </enable>
    <input>
      <prop>/orientation/roll-deg</prop>
    </input>
    <reference>
      <prop>/autopilot/internal/target-roll-deg</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/aileron-command</prop>
    </output>
    <config>
      <Kp>0.001</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.000001</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-0.4</u_min> <!-- minimum output clamp -->
      <u_max>0.4</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  

  <filter> 
  <type>noise-spike</type>
  <max-rate-of-change>1.0</max-rate-of-change>
     <enable>
      <prop>/autopilot/locks/heading</prop>
      <value>dg-heading-hold</value>
    </enable>	 
  <input>/autopilot/internal/aileron-command</input>
  <output>/controls/flight/ap-aileron</output>
</filter>

  <!-- True Heading hold.  2 stage cascade controller. -->

<predict-simple>
  <name>predicted trueheading error 5 seconds ahead</name>
  <debug>false</debug>
  <input>/autopilot/internal/true-heading-error-deg</input>
  <output>/autopilot/internal/true-heading-error-5-sec-ahead</output>
  <seconds>5.0</seconds>
  <filter-gain>0.1</filter-gain>
</predict-simple>

  <!-- Stage #1 sets target roll based on diff between current heading -->
  <!-- and target heading. -->
  <pid-controller>
    <name>True Heading Hold (DG based) Stage 1</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/heading</prop>
      <value>true-heading-hold</value>
    </enable>
    <input>
      <prop>/autopilot/internal/true-heading-error-5-sec-ahead</prop>
    </input>
    <reference>
      <value>0.0</value>
    </reference>
    <output>
      <prop>/autopilot/internal/target-roll-deg</prop>
    </output>
    <config>
      <Kp>-3.0</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>     <!-- input value weighing factor -->
      <alpha>0.0001</alpha><!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>   <!-- input value weighing factor for -->
                           <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>     <!-- derivator time -->
      <u_min>-35.0</u_min> <!-- minimum output clamp -->
      <u_max>35.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>


<predict-simple>
  <name>predicted roll  2 seconds ahead</name>
  <debug>false</debug>
  <input>/orientation/roll-deg</input>
  <output>/autopilot/internal/predicted-roll-2-sec-ahead</output>
  <seconds>2.0</seconds>
  <filter-gain>0.1</filter-gain>
</predict-simple>

  <!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->
  <pid-controller>
    <name>True Heading Hold (DG based) Stage 2</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/heading</prop>
      <value>true-heading-hold</value>
    </enable>
    <input>
      <prop>/autopilot/internal/predicted-roll-2-sec-ahead</prop>
    </input>
    <reference>
      <prop>/autopilot/internal/target-roll-deg</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/aileron-command</prop>
    </output>
    <config>
      <Kp>0.001</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.000001</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>1.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-0.4</u_min> <!-- minimum output clamp -->
      <u_max>0.4</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  

<filter>
  <type>noise-spike</type>
  <max-rate-of-change>0.1</max-rate-of-change>
    <enable>
      <prop>/autopilot/locks/heading</prop>
      <value>true-heading-hold</value>
    </enable>	  
  <input>/autopilot/internal/aileron-command</input>
  <output>/controls/flight/ap-aileron</output>  
</filter>



 <!-- =============================================================== -->
 <!-- Pitch Axis Modes                                                -->
 <!-- =============================================================== -->

  <!-- Altitude hold.  3 stage cascade controller. -->

  <!-- Stage #1 sets target rate of climb based on diff between current alt -->
  <!-- and target altitude. -->


  <pi-simple-controller>
    <name>Altitude Hold (Altimeter based) Stage 1</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>altitude-hold</value>
    </enable>
    <input>
      <prop>/instrumentation/altimeter/indicated-altitude-ft</prop>
    </input>
    <reference>
      <prop>/autopilot/settings/target-altitude-ft</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/target-climb-rate-fps</prop>
    </output>
    <config>
      <Kp>0.1</Kp>          <!-- proportional gain -->
      <Ki>0.0005</Ki>          <!-- integral gain -->
      <u_min>-66.6</u_min> <!-- minimum output clamp -->
      <u_max>33.3</u_max>   <!-- maximum output clamp -->
    </config>
  </pi-simple-controller>
  
<predict-simple>
  <name>predicted climb rate error 2 seconds ahead</name>
  <debug>false</debug>
  <input>/velocities/vertical-speed-fps</input>
  <output>/autopilot/internal/predicted-climb-rate-2-sec-ahead</output>
  <seconds>2.0</seconds>
  <filter-gain>0.1</filter-gain>
</predict-simple>
  
 
  <!-- Stage #2 drives the elevator-trim to achieve the desired climb rate. -->
  <pid-controller>
    <name>Altitude Hold (Altimeter based) Stage 2</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>altitude-hold</value>
    </enable>
    <input>
      <prop>/autopilot/internal/predicted-climb-rate-2-sec-ahead</prop>
    </input>
    <reference>
      <prop>/autopilot/internal/target-climb-rate-fps</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/target-g</prop>
    </output>
    <config>
      <Kp>0.03</Kp>      <!-- proportional gain -->
      <Ki>1.0</Ki>         <!-- integral gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>1.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>0.3</u_min> <!-- minimum output clamp -->
      <u_max>3.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  
  
  <!-- Stage #3 drives the elevator-trim to achieve the desired g loading. -->
  <pid-controller>
    <name>Altitude Hold (Altimeter based) Stage 3</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>altitude-hold</value>
    </enable>
    <input>
      <prop>/accelerations/pilot-gdamped</prop>
    </input>
    <reference>
      <prop>/autopilot/internal/target-g</prop>
    </reference>
    <output>
		<prop>/controls/flight/ap-elevator</prop>
    </output>
    <config>
      <Kp>-1.0</Kp>      <!-- proportional gain -->
      <Ki>0.0</Ki>
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.001</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>1.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-0.5</u_min> <!-- minimum output clamp -->
      <u_max>0.5</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>  


  <!-- AGL hold.  2 stage cascade controller. ****************************** -->

  <!-- Stage #1 sets target rate of climb based on diff between current agl -->
  <!-- and target agl. -->
  
<predict-simple>
  <name>predicted height 2 seconds ahead</name>
  <debug>false</debug>
  <input>/position/altitude-agl-ft</input>
  <output>/autopilot/internal/predicted-height-2-sec-ahead</output>
  <seconds>2.0</seconds>
  <filter-gain>0.1</filter-gain>
</predict-simple>
  
  <pi-simple-controller>
    <name>AGL Hold (Altimeter based) Stage 1</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>agl-hold</value>
    </enable>
    <input>
      <prop>/autopilot/internal/predicted-height-2-sec-ahead</prop>
    </input>
    <reference>
      <prop>/autopilot/settings/target-agl-ft</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/target-climb-rate-fps</prop>
    </output>
    <config>
      <Kp>0.2</Kp>          <!-- proportional gain -->
      <Ki>0.0005</Ki>          <!-- integral gain -->
      <u_min>-33.3</u_min> <!-- minimum output clamp -->
      <u_max>100</u_max>   <!-- maximum output clamp -->
    </config>
  </pi-simple-controller>
  
  <predict-simple>
  <name>predicted climb rate error 2 seconds ahead</name>
  <debug>false</debug>
  <input>/velocities/vertical-speed-fps</input>
  <output>/autopilot/internal/predicted-climb-rate-2-sec-ahead</output>
  <seconds>2.0</seconds>
  <filter-gain>0.1</filter-gain>
</predict-simple>

  <!-- Stage #2 drives the elevator-trim to achieve the desired climb rate. -->
  <pid-controller>
    <name>Altitude Hold (Altimeter based) Stage 2</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>agl-hold</value>
    </enable>
    <input>
      <prop>/autopilot/internal/predicted-climb-rate-2-sec-ahead</prop>
    </input>
    <reference>
      <prop>/autopilot/internal/target-climb-rate-fps</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/target-g</prop>
    </output>
    <config>
      <Kp>0.03</Kp>      <!-- proportional gain -->
      <Ki>1.0</Ki>          <!-- integral gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>1.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>0.0</u_min> <!-- minimum output clamp -->
      <u_max>4.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  
  <!-- Stage #3 drives the elevator-trim to achieve the desired g loading. -->
  <pid-controller>
    <name>Altitude Hold (Altimeter based) Stage 3</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>agl-hold</value>
    </enable>
    <input>
      <prop>/accelerations/pilot-gdamped</prop>
    </input>
    <reference>
      <prop>/autopilot/internal/target-g</prop>
    </reference>
    <output>
      <prop>/controls/flight/ap-elevator</prop>
    </output>
    <config>
      <Kp>-1.0</Kp>      <!-- proportional gain -->
      <Ki>0.0</Ki>
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.001</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>1.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-0.5</u_min> <!-- minimum output clamp -->
      <u_max>0.5</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>  


</PropertyList>
